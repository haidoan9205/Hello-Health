{"version":3,"sources":["components/Navbar.tsx","components/Counter.tsx","components/Employee.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","navbar","display","backgroundColor","itemNav","listStyleType","textItem","textDecoration","color","Navbar","classes","className","Button","to","marginLeft20","marginLeft","Counter","useState","counter","setCounter","style","marginTop","onClick","variant","TextField","disabled","id","label","value","columns","field","headerName","width","Employee","employeeDetail","setEmployeeDetail","name","setName","email","setEmail","position","setPosition","dataGridKey","setDataGridKey","getEmployees","axios","get","then","res","data","console","log","e","error","useEffect","height","rows","getRowId","Math","random","pageSize","rowsPerPageOptions","Grid","item","xs","sm","margin","onChange","event","target","post","status","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0acbc3b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nimport {  Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  navbar: {\r\n    display:'flex',\r\n    backgroundColor: 'rgb(52, 155, 235)'\r\n  },\r\n  itemNav: {\r\n    listStyleType: 'none'\r\n  },\r\n  textItem: {\r\n    textDecoration: 'none',\r\n    color: 'black'\r\n  }\r\n});\r\nconst Navbar= () =>{\r\n  const classes = useStyles();\r\n  return (\r\n  <div className={classes.navbar}>\r\n    <Button className={classes.itemNav}>\r\n      <Link className={classes.textItem} to=\"/\">Counter</Link>\r\n    </Button>\r\n    <Button className={classes.itemNav}>\r\n      <Link className={classes.textItem} to=\"/employee\">Employee</Link>\r\n    </Button>\r\n  </div>\r\n  );\r\n}\r\nexport default Navbar;","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Button, TextField } from \"@mui/material\";\r\n\r\nconst useStyles = makeStyles({\r\n  marginLeft20: {\r\n    marginLeft: \"20px\",\r\n  },\r\n});\r\n\r\nconst Counter = () => {\r\n  const classes = useStyles();\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const increaseCounter = () => {\r\n    setCounter(counter + 1);\r\n  };\r\n\r\n  const resetCounter = () => {\r\n    setCounter(0);\r\n  };\r\n  return (\r\n    <div style={{ marginTop: \"20px\", marginLeft: \"10px\" }}>\r\n      <div>\r\n        <Button onClick={increaseCounter} variant=\"outlined\" color=\"success\">\r\n          Increase\r\n        </Button>\r\n        <Button onClick={resetCounter} className={classes.marginLeft20} variant=\"outlined\" color=\"error\">\r\n          Reset\r\n        </Button>\r\n      </div>\r\n      <br />\r\n      <TextField disabled id=\"outlined\" label=\"Counter\" value={counter} />\r\n    </div>\r\n  );\r\n};\r\nexport default Counter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataGrid, GridColDef, GridValueGetterParams } from \"@mui/x-data-grid\";\r\nimport { Grid, Button, TextField } from \"@mui/material\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\n\r\nconst columns: GridColDef[] = [\r\n  { field: \"name\", headerName: \"Name\", width: 200 },\r\n  { field: \"email\", headerName: \"Email\", width: 200 },\r\n  { field: \"position\", headerName: \"Position\", width: 200 },\r\n  {\r\n    field: \"id\",\r\n    headerName: \"ID\",\r\n    width: 90,\r\n  },\r\n];\r\n\r\nconst successNotify = () =>\r\n  toast.success(\"Employee added successfully!\", {\r\n    position: \"top-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n\r\nconst Employee = () => {\r\n  const [employeeDetail, setEmployeeDetail] = useState([{}]);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [position, setPosition] = useState(\"\");\r\n  const [dataGridKey, setDataGridKey] = useState(0);\r\n\r\n  const handleChangeName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const handleChangeEmail = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const handleChangePosition = (event) => {\r\n    setPosition(event.target.value);\r\n  };\r\n\r\n  const addNewEmployee = () => {\r\n    axios\r\n      .post(\r\n        \"https://619314fbd3ae6d0017da836f.mockapi.io/api/hellohealth/employee\",\r\n        {\r\n          name,\r\n          email,\r\n          position,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 201) {\r\n          console.log(\"respost:\", res);\r\n          successNotify();\r\n          getEmployees();\r\n          setDataGridKey(dataGridKey + 1);\r\n        }\r\n      });\r\n  };\r\n\r\n  const getEmployees = () =>\r\n    axios\r\n      .get(\r\n        \"https://619314fbd3ae6d0017da836f.mockapi.io/api/hellohealth/employee\"\r\n      )\r\n      .then((res) => {\r\n        setEmployeeDetail(res.data);\r\n        console.log(\"employeeDetail\", employeeDetail);\r\n      })\r\n      .then((e) => console.error(e));\r\n\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ height: 400, width: \"100%\", marginLeft: '10px', marginTop: '20px' }}>\r\n      <DataGrid\r\n        rows={employeeDetail}\r\n        key={\"dataGridKey-\" + dataGridKey}\r\n        getRowId={() => Math.random()}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5]}\r\n      />\r\n\r\n      <Grid item xs={12} sm={3}>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Name\"\r\n          margin=\"dense\"\r\n          variant=\"standard\"\r\n          onChange={handleChangeName}\r\n        />\r\n        <br />\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Email\"\r\n          margin=\"dense\"\r\n          variant=\"standard\"\r\n          onChange={handleChangeEmail}\r\n        />\r\n        <br />\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Position\"\r\n          margin=\"dense\"\r\n          variant=\"standard\"\r\n          onChange={handleChangePosition}\r\n        />\r\n        <br />\r\n        <Button onClick={addNewEmployee} style={{marginLeft: '50px'}} variant=\"contained\">\r\n          Add New\r\n        </Button>\r\n        <ToastContainer />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Employee;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport './App.css';\nimport Navbar from \"./components/Navbar\"\nimport Counter from './components/Counter';\nimport Employee from './components/Employee';\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path='/hello-health'  element={<Counter/>} />\n        <Route path='/hello-health/employee' element={<Employee/>} />\n\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}